//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WeatherStation.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WeatherStation.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ändere Geo Koordinaten ähnelt.
        /// </summary>
        public static string btnGetCoordinates {
            get {
                return ResourceManager.GetString("btnGetCoordinates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wetterdaten Aktualisierung starten ähnelt.
        /// </summary>
        public static string btnStartGetWeatherData {
            get {
                return ResourceManager.GetString("btnStartGetWeatherData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wetterdaten Aktualisierung anhalten ähnelt.
        /// </summary>
        public static string btnStopGetWeatherData {
            get {
                return ResourceManager.GetString("btnStopGetWeatherData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Letzte Aktualisierung: ähnelt.
        /// </summary>
        public static string LastSuccessfullyUpdateTime {
            get {
                return ResourceManager.GetString("LastSuccessfullyUpdateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Land ähnelt.
        /// </summary>
        public static string lblCountry {
            get {
                return ResourceManager.GetString("lblCountry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Breitengrad / Latitude ähnelt.
        /// </summary>
        public static string lblLatitude {
            get {
                return ResourceManager.GetString("lblLatitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Längengrad / Longitude ähnelt.
        /// </summary>
        public static string lblLongitude {
            get {
                return ResourceManager.GetString("lblLongitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Postleitzahl ähnelt.
        /// </summary>
        public static string lblZip {
            get {
                return ResourceManager.GetString("lblZip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die Temperatur ist soeben auf {0} °C gestiegen. ähnelt.
        /// </summary>
        public static string notificationAbove30Degrees {
            get {
                return ResourceManager.GetString("notificationAbove30Degrees", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Der Wert{1} darf nicht länger als {0} Zeichen lang sein! ähnelt.
        /// </summary>
        public static string validation_warning_valueCanNotLongerThan {
            get {
                return ResourceManager.GetString("validation_warning_valueCanNotLongerThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Der Wert{1} muss genau {0} Zeichen lang sein! ähnelt.
        /// </summary>
        public static string validation_warning_valueLengthMustBe {
            get {
                return ResourceManager.GetString("validation_warning_valueLengthMustBe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Der Wert{1} muss mindestens {0} Zeichen lang sein! ähnelt.
        /// </summary>
        public static string validation_warning_valueMustLongerAs {
            get {
                return ResourceManager.GetString("validation_warning_valueMustLongerAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wetterdaten ähnelt.
        /// </summary>
        public static string weatherData {
            get {
                return ResourceManager.GetString("weatherData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wetterdaten der Koordinaten  ähnelt.
        /// </summary>
        public static string weatherDataCoordinates {
            get {
                return ResourceManager.GetString("weatherDataCoordinates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Luftfeuchtigkeit  ähnelt.
        /// </summary>
        public static string WeatherdataHumidity {
            get {
                return ResourceManager.GetString("WeatherdataHumidity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Luftdruck  ähnelt.
        /// </summary>
        public static string WeatherdataPressure {
            get {
                return ResourceManager.GetString("WeatherdataPressure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Temperatur ähnelt.
        /// </summary>
        public static string WeatherdataTemperatur {
            get {
                return ResourceManager.GetString("WeatherdataTemperatur", resourceCulture);
            }
        }
    }
}
